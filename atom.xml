<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fovever Young</title>
  <subtitle>Stay hungry Stay foolish.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cooooper.github.io/"/>
  <updated>2016-11-23T08:14:08.000Z</updated>
  <id>http://cooooper.github.io/</id>
  
  <author>
    <name>在路上。</name>
    <email>idevhan@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Best Of Times</title>
    <link href="http://cooooper.github.io/2016/11/23/Best-of-times/"/>
    <id>http://cooooper.github.io/2016/11/23/Best-of-times/</id>
    <published>2016-11-23T08:06:37.000Z</published>
    <updated>2016-11-23T08:14:08.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;英文原文：&lt;br&gt;It was the best of times, it was the worst of times; it was the age&lt;br&gt;of wisdom, it was the age of foolishness; it was the epoch of belief,&lt;br&gt;it was the epoch of incredulity; it was the season of light, it was&lt;br&gt;the season of darkness; it was the spring of hope, it was the winter&lt;br&gt;of despair; we had everything before us, we had nothing before us; we&lt;br&gt;were all going direct to heaven, we were all going direct the other&lt;br&gt;way.&lt;/p&gt;
&lt;p&gt;翻译：&lt;br&gt;这是一个最好的时代，也是一个最坏的时代；这是明智的年代，这是愚昧的年代，这是信任的&lt;br&gt;元，这是怀疑的纪元；这是光明的季节，这是黑暗的季节；这是希望的春日，这是失望的冬日；&lt;br&gt;我们面前应有尽有，我们面前一无所有；我们都将直下地狱。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;英文原文：&lt;br&gt;It was the best of times, it was the worst of times; it was the age&lt;br&gt;of wisdom, it was the age of foolishnes
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>多年前</title>
    <link href="http://cooooper.github.io/2016/10/31/%E5%A4%9A%E5%B9%B4%E5%89%8D/"/>
    <id>http://cooooper.github.io/2016/10/31/多年前/</id>
    <published>2016-10-31T06:53:51.000Z</published>
    <updated>2016-10-31T06:58:00.000Z</updated>
    
    <content type="html">&lt;p&gt;The following words were written on the tomb of an Anglican Bishop in the Crypts of Westminster Abbey:&lt;br&gt;When I was young and free and my imagination had no limits, I dreamed of changing the world. As i grew older and wiser, I discovered the world would not change,so I shortened my sights somewhat and decided to change only my country.But it, too, seemed immovable.&lt;br&gt;As I grew into my twilight years, in one last desperate attempt, I settled for changing only my family, those closest to me, but alas, they would have none of it.And now as I lie on my deathbed, I suddenly realize: If I had only changed my self first, then by example I would have changed my family.From their inspiration and encouragement, I would then have been able to better my country and, who knows, I may have even changed the world.&lt;/p&gt;
&lt;p&gt;在威斯敏斯特教堂地下室英国圣公会主教的墓碑上写着这样的一段话:&lt;br&gt;当我年轻自由的时候，我的想象力没有任何局限，我梦想改变这个世界。当我渐渐成熟明智的时候，我发现这个世界是不可能改变的，于是我将眼光放得短浅了一些，那就只改变我的国家吧。但是我的国家似乎也是不能改变的。当我到了迟暮之年，抱着最后一丝努力的希望，我决定只改变我的家庭，我亲近的人，但是他们根本不接受改变。现在在我临终之时，我才突然意识到：如果起初我只改变自己，接着我就可以依此改变我的家人。在他们的激发和鼓励下，我可能就能改善我的国家。接下来，谁又知道呢，也许我连整个世界都可以改变。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The following words were written on the tomb of an Anglican Bishop in the Crypts of Westminster Abbey:&lt;br&gt;When I was young and free and m
    
    </summary>
    
    
      <category term="life" scheme="http://cooooper.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>格式化Number 小技巧</title>
    <link href="http://cooooper.github.io/2016/07/08/%E6%A0%BC%E5%BC%8F%E5%8C%96Number-%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://cooooper.github.io/2016/07/08/格式化Number-小技巧/</id>
    <published>2016-07-08T06:11:09.000Z</published>
    <updated>2016-07-08T06:18:12.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;原值:2.7999999999&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef CF_ENUM(CFIndex, CFNumberFormatterRoundingMode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kCFNumberFormatterRoundCeiling = 0,//四舍五入,直接输出3 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kCFNumberFormatterRoundFloor = 1,//保留小数输出2.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kCFNumberFormatterRoundDown = 2,//加上了人民币标志,原值输出￥2.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kCFNumberFormatterRoundUp = 3,//本身数值乘以100后用百分号表示,输出280%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kCFNumberFormatterRoundHalfEven = 4,//输出2.799999999E0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kCFNumberFormatterRoundHalfDown = 5,//原值的中文表示,输出二点七九九九。。。。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kCFNumberFormatterRoundHalfUp = 6//原值中文表示,输出第三&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NSNumberFormatter *formatter = [[NSNumberFormatter alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formatter.numberStyle = kCFNumberFormatterRoundHalfDown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *string = [formatter stringFromNumber:[NSNumber numberWithInt:12]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;str = %@&amp;quot;, string);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;原值:2.7999999999&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CocoaPods安装使用和错误</title>
    <link href="http://cooooper.github.io/2016/06/15/CocoaPods%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E5%92%8C%E9%94%99%E8%AF%AF/"/>
    <id>http://cooooper.github.io/2016/06/15/CocoaPods安装使用和错误/</id>
    <published>2016-06-15T09:50:28.000Z</published>
    <updated>2016-06-15T09:52:10.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Cocopods的安装&lt;br&gt;CocoaPods应该是iOS最常用最有名的类库管理&lt;br&gt;当我们开发iOS应用时，会经常使用到很多第三方开源类库，比如AFNetWorking等等，可能某个类库又用到其他的库，手动一个个去下载所需类库十分麻烦。如果我们项目中用到的类库有更新，还要重新下载新版本，重新加入到项目中，十分麻烦。所以，我们需要 CocoaPods帮我们管理。&lt;br&gt;如何下载和安装CocoaPods？&lt;br&gt;在安装CocoaPods之前，首先要在本地安装好Ruby环境。至于如何在Mac中安装好Ruby环境，请找度娘和谷哥。&lt;br&gt;假如你在本地已经安装好Ruby环境，那么下载和安装CocoaPods将十分简单，只需要一行命令。在Terminator中输入以下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo gem install cocoapods
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是,在终端中敲入这个命令之后，可能半天没有任何反应。&lt;/p&gt;
&lt;p&gt;这时我们可以用淘宝的Ruby镜像来访问cocoapods。按照下面的顺序在终端中敲入依次敲入命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gem sources --remove https://rubygems.org/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;//等有反应之后再敲入以下命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gem sources -a https://ruby.taobao.org/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为了验证你的Ruby镜像是并且仅是taobao，可以用以下命令查看：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gem sources -l
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;只有在终端中出现下面文字才表明你上面的命令是成功的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*** CURRENT SOURCES ***
https://ruby.taobao.org/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这时候，我们再次在终端中运行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo gem install cocoapods

$ pod setup
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;等一会，CocoaPods就可以在你本地下载并且安装好了&lt;/p&gt;
&lt;p&gt;安装时候遇到的问题：&lt;br&gt;Setting up CocoaPods master repo&lt;br&gt;[!] /usr/bin/git clone &lt;a href=&quot;https://github.com/CocoaPods/Specs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/CocoaPods/Specs.git&lt;/a&gt;  master –depth=1&lt;/p&gt;
&lt;p&gt;Cloning into ‘master’…&lt;br&gt;error: RPC failed; result=18, HTTP code = 200&lt;br&gt;fatal: The remote end hung up unexpectedly&lt;br&gt;fatal: early EOF&lt;br&gt;fatal: index-pack failed&lt;br&gt;解决办法：&lt;br&gt;$ git config –global http.postBuffer 24288000&lt;br&gt;$ git config –list&lt;br&gt;会输出：http.postbuffer=24288000&lt;/p&gt;
&lt;p&gt;再次执行:&lt;/p&gt;
&lt;p&gt;$ pod setup&lt;br&gt;Cocopods使用&lt;br&gt;我们想用CocoaPods，在项目中导入ASIHTTPRequest类库&lt;br&gt;首先，我们要确定ASIHTTPRequest是否支持CocoaPods，可以用CocoaPods的搜索功能验证一下。在终端中输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pod search ASIHTTPRequest
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入之后，你会在终端中看到关于ASIHTTPRequest类库的一些信息。&lt;br&gt;比如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-&amp;gt; ASIHTTPRequest (1.8.2)
   Easy to use CFNetwork wrapper for HTTP requests, Objective-C, Mac    OS X and  iPhone.
   pod &amp;apos;ASIHTTPRequest&amp;apos;, &amp;apos;~&amp;gt; 1.8.2&amp;apos;
   - Homepage: http://allseeing-i.com/ASIHTTPRequest
   - Source:   https://github.com/pokeb/asi-http-request.git
   - Versions: 1.8.2, 1.8.1 [master repo]
   - Sub specs:
   - ASIHTTPRequest/Core (1.8.2)
   - ASIHTTPRequest/ASIWebPageRequest (1.8.2)
   - ASIHTTPRequest/CloudFiles (1.8.2)
   - ASIHTTPRequest/S3 (1.8.2)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在知道ASIHTTPRequest支持Cocopods了，我们就要道你的项目中创建一个文件，这个文件就叫做“Podfile”，一定得是这个文件名，而且没有后缀。在里面添加pod ‘ASIHTTPRequest’, ‘~&amp;gt; 1.8.2’,就是告诉CocoaPods,我们要下载ASIHTTPRequest ，1.8.2版本&lt;/p&gt;
&lt;p&gt;我们先创建这个PodFile文件。在终端中进入（cd命令）你项目所在目录，然后在当前目录下，利用vim创建Podfile，运行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim Podfile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后在Podfile文件中输入以下文字：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod &amp;quot;ASIHTTPRequest&amp;quot;, &amp;quot;~&amp;gt; 1.8.2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后保存退出。vim环境下，保存退出命令是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:wq!
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们会发现项目中，多了一个名字为Podfile的文件，而且文件内容就是输入的内容。注意，Podfile文件应该和你的工程文件.xcodeproj在同一个目录下。&lt;/p&gt;
&lt;p&gt;下面我们就可以利用CocoPods下载ASIHTTPRequest类库了。还是在终端中的当前项目下，运行命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pod install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行完命令之后，会看见有这句话[!] From now on use &lt;strong&gt;&lt;em&gt;**&lt;/em&gt;&lt;/strong&gt;.xcworkspace这是说：以后打开项目就用 &lt;strong&gt;.xcworkspace 打开，而不是之前的&lt;/strong&gt;.xcodeproj文件。&lt;/p&gt;
&lt;p&gt;现在，我们就可以开始使用ASIHTTPRequest啦。可以测试一下，在项目中输入：&lt;/p&gt;
&lt;p&gt;#import &lt;afnetworking.h&gt;或者#import “AFNetworking.h”试试&lt;/afnetworking.h&gt;&lt;/p&gt;
&lt;p&gt;如果以后有更新 或者 添加别的类库，用update命令即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pod update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CocoaPods 报错&lt;br&gt;Xcode 升级到 6.0 后，更新 CocoaPods 或者以前手动添加过第三方SDK改用Cocopods，可能会出现以下的错误&lt;/p&gt;
&lt;p&gt;错误1：&lt;br&gt;     [!] The &lt;code&gt;Paopao [Debug]&lt;/code&gt; target overrides the &lt;code&gt;PODS_ROOT&lt;/code&gt; build setting defined in `Pods/Target Support Files/Pods/Pods.debug.xcconfig’. This can lead to problems with the CocoaPods installation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the &lt;code&gt;$(inherited)&lt;/code&gt; flag, or&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remove the build settings from the target.&lt;/p&gt;
&lt;p&gt;  [!] The &lt;code&gt;Paopao [Debug]&lt;/code&gt; target overrides the &lt;code&gt;OTHER_LDFLAGS&lt;/code&gt; build setting defined in `Pods/Target Support Files/Pods/Pods.debug.xcconfig’. This can lead to problems with the CocoaPods installation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;$(inherited)&lt;/code&gt; flag, or&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remove the build settings from the target.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[!] The `Paopao [Release]` target overrides the `PODS_ROOT` build setting defined in `Pods/Target Support Files/Pods/Pods.release.xcconfig&amp;apos;. This can lead to problems with the CocoaPods installation
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;$(inherited)&lt;/code&gt; flag, or&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remove the build settings from the target.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[!] The `Paopao [Release]` target overrides the `OTHER_LDFLAGS` build setting defined in `Pods/Target Support Files/Pods/Pods.release.xcconfig&amp;apos;. This can lead to problems with the CocoaPods installation
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;$(inherited)&lt;/code&gt; flag, or&lt;/li&gt;
&lt;li&gt;Remove the build settings from the target.&lt;br&gt;产生此警告的原因是项目 Target 中的一些设置，CocoaPods 也做了默认的设置，如果两个设置结果不一致，就会造成问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我想要使用 CocoaPods 中的设置，分别在我的项目中定义PODS_ROOT 和 Other Linker Flags的地方，把他们的值用$(inherited)替换掉，进入终端，执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;警告没了&lt;/p&gt;
&lt;p&gt;我个人更喜欢一种简单粗暴的方法：&lt;/p&gt;
&lt;p&gt;点击项目文件 project.xcodeproj，右键显示包内容，用文本编辑器打开project.pbxproj，删除OTHER_LDFLAGS的地方，保存，pod update,警告没了。。。。&lt;/p&gt;
&lt;p&gt;错误2：&lt;/p&gt;
&lt;p&gt;错误&lt;br&gt;这个解决也比较简单，&lt;br&gt;在Build Setting 中的Other Linker Flags选项中加入$(OTHER_LDFLAGS) 如图：&lt;/p&gt;
&lt;p&gt;解决错误&lt;br&gt;编译通过………&lt;/p&gt;
&lt;p&gt;文／青楼（简书作者）&lt;br&gt;原文链接：&lt;a href=&quot;http://www.jianshu.com/p/b5315bf42975&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/b5315bf42975&lt;/a&gt;&lt;br&gt;著作权归作者所有，转载请联系作者获得授权，并标注“简书作者”。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Cocopods的安装&lt;br&gt;CocoaPods应该是iOS最常用最有名的类库管理&lt;br&gt;当我们开发iOS应用时，会经常使用到很多第三方开源类库，比如AFNetWorking等等，可能某个类库又用到其他的库，手动一个个去下载所需类库十分麻
    
    </summary>
    
    
      <category term="cocoaPods" scheme="http://cooooper.github.io/tags/cocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>UILocalized​Indexed​Collation</title>
    <link href="http://cooooper.github.io/2016/06/11/UILocalized%E2%80%8BIndexed%E2%80%8BCollation/"/>
    <id>http://cooooper.github.io/2016/06/11/UILocalized​Indexed​Collation/</id>
    <published>2016-06-10T16:03:08.000Z</published>
    <updated>2016-06-10T16:03:37.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://nshipster.cn/uilocalizedindexedcollation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UILocalized​Indexed​Collation&lt;/a&gt;用法&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://nshipster.cn/uilocalizedindexedcollation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UILocalized​Indexed​Coll
    
    </summary>
    
    
      <category term="ios" scheme="http://cooooper.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>XcodeGhost 是怎么回事</title>
    <link href="http://cooooper.github.io/2016/05/18/XcodeGhost-%E6%98%AF%E6%80%8E%E4%B9%88%E5%9B%9E%E4%BA%8B/"/>
    <id>http://cooooper.github.io/2016/05/18/XcodeGhost-是怎么回事/</id>
    <published>2016-05-18T10:05:53.000Z</published>
    <updated>2016-05-18T10:06:16.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Ken Thompson，C语言前身B语言的作者，Unix的发明人之一(另一个是Dennis M. Riche老大，被尊为DMR)，Belle(一个厉害的国际象棋程序)的作者之一, 操作系统Plan 9的主要作者(另一个是大牛人Rob Pike, 前不久被google挖走了)。Ken爷爷也算是计算机历史上开天辟地的人物了。1969年还是计算机史前时代，普通人都认为只有大型机才能运行通用的操作系统，小型机只有高山仰止的份儿。至于用高级语言来写操作系统，更是笑谈。Ken爷爷自然不是池中物，于是他和DMR怒了，在1969年到1970间用汇编在PDP-7上写出了UNIX的第一个版本。他们并不知道，一场轰轰烈烈的UNIX传奇由此拉开了序幕。Ken爷爷在1971年又把Unix用C重写，于是C在随后20年成就了不知多少豪杰的梦想和光荣。&lt;/p&gt;
&lt;p&gt;Ken爷爷还有段佳话： 装了UNIX的PDP-11最早被安装在Bell Lab里供大家日常使用。很快大家就发现Ken爷爷总能进入他们的帐户，获得最高权限。Bell Lab里的科学家都心比天高，当然被搞得郁闷无比。于是有高手怒了，跳出来分析了UNIX代码，找到后门，修改代码，然后重新编译了整个UNIX。就在大家都以为“这个世界清净了”的时候，他们发现Ken爷爷还是轻而易举地拿到他们的帐户权限，百思不解后，只好继续郁闷。谁知道这一郁闷，就郁闷了14年，直到Ken爷爷道出个中缘由。原来，代码里的确有后门，但后门不在Unix代码里，而在编译Unix代码的C编译器里。每次C编译器编译UNIX的代码，就自动生成后门代码。而整个Bell Lab的人，都是用Ken爷爷的C编译器。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Ken Thompson，C语言前身B语言的作者，Unix的发明人之一(另一个是Dennis M. Riche老大，被尊为DMR)，Belle(一个厉害的国际象棋程序)的作者之一, 操作系统Plan 9的主要作者(另一个是大牛人Rob P
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://cooooper.github.io/2016/05/18/hello-world/"/>
    <id>http://cooooper.github.io/2016/05/18/hello-world/</id>
    <published>2016-05-18T09:17:47.000Z</published>
    <updated>2016-05-18T09:17:47.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a h
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS 面试题汇总</title>
    <link href="http://cooooper.github.io/2016/05/18/iOS-%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://cooooper.github.io/2016/05/18/iOS-面试题汇总/</id>
    <published>2016-05-18T08:38:49.000Z</published>
    <updated>2016-05-18T08:39:59.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;#####初级部分&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;最近这两天你有学到什么知识/技能么？&lt;/li&gt;
&lt;li&gt;最近有做过比较酷或者比较有挑战的项目么？&lt;/li&gt;
&lt;li&gt;最近看过的书/文章有哪些？&lt;/li&gt;
&lt;li&gt;如何向一个只接触过互联网的孩子解释「电视」？&lt;/li&gt;
&lt;li&gt;为什么要学习编程，编程对你而言的乐趣在哪儿？&lt;/li&gt;
&lt;li&gt;如果一个函数10次中有7次正确，3次错误，问题可能出现在哪里？&lt;/li&gt;
&lt;li&gt;自身最大优点是什么，怎么证明？&lt;/li&gt;
&lt;li&gt;有没有在 GitHub 上发布过开源代码，参与过开源项目？&lt;/li&gt;
&lt;li&gt;你最近遇到过的一个技术挑战是什么？怎么解决的？&lt;/li&gt;
&lt;li&gt;开发常用的工具有哪些？&lt;/li&gt;
&lt;li&gt;熟悉 CocoaPods 么？能大概讲一下工作原理么？&lt;/li&gt;
&lt;li&gt;最常用的版本控制工具是什么，能大概讲讲原理么？&lt;/li&gt;
&lt;li&gt;今年你最想掌握的一门技术是什么？为什么？目前已经做到了哪个程度？&lt;/li&gt;
&lt;li&gt;你一般是怎么用 Instruments 的？&lt;/li&gt;
&lt;li&gt;你一般是如何调试 Bug 的？&lt;/li&gt;
&lt;li&gt;你在你的项目中用到了哪些设计模式？&lt;/li&gt;
&lt;li&gt;如何实现单例，单例会有什么弊端？&lt;/li&gt;
&lt;li&gt;iOS 是如何管理内存的？&lt;/li&gt;
&lt;li&gt;什么是响应链，它是怎么工作的？&lt;/li&gt;
&lt;li&gt;如何访问并修改一个类的私有属性？&lt;/li&gt;
&lt;li&gt;iOS Extension 是什么？能列举几个常用的 Extension 么？&lt;/li&gt;
&lt;li&gt;如何把一个包含自定义对象的数组序列化到磁盘？&lt;/li&gt;
&lt;li&gt;Apple Pay 是什么？它的大概工作流程是怎样的？&lt;/li&gt;
&lt;li&gt;iOS 的沙盒目录结构是怎样的？ App Bundle 里面都有什么？&lt;/li&gt;
&lt;li&gt;iOS 的签名机制大概是怎样的？&lt;/li&gt;
&lt;li&gt;iOS 7的多任务添加了哪两个新的 API? 各自的使用场景是什么？&lt;/li&gt;
&lt;li&gt;Objective-C 的 class 是如何实现的？Selector 是如何被转化为 C 语言的函数调用的？&lt;/li&gt;
&lt;li&gt;UIScrollView 大概是如何实现的，它是如何捕捉、响应手势的？&lt;/li&gt;
&lt;li&gt;Objective-C 如何对已有的方法，添加自己的功能代码以实现类似记录日志这样的功能？&lt;br&gt;+load 和 +initialize 的区别是什么？&lt;/li&gt;
&lt;li&gt;如何让 Category 支持属性？&lt;/li&gt;
&lt;li&gt;NSOperation 相比于 GCD 有哪些优势？&lt;/li&gt;
&lt;li&gt;strong / weak / unsafe_unretained 的区别？&lt;/li&gt;
&lt;li&gt;如何为 Class 定义一个对外只读对内可读写的属性?&lt;/li&gt;
&lt;li&gt;Objective-C 中，meta-class 指的是什么？&lt;/li&gt;
&lt;li&gt;UIView 和 CALayer 之间的关系？&lt;/li&gt;
&lt;li&gt;+[UIView animateWithDuration:animations:completion:] 内部大概是如何实现的？&lt;/li&gt;
&lt;li&gt;什么时候会发生「隐式动画」？&lt;/li&gt;
&lt;li&gt;如何处理异步的网络请求？&lt;/li&gt;
&lt;li&gt;frame 和 bounds 的区别是什么？&lt;/li&gt;
&lt;li&gt;如何把一张大图缩小为1/4大小的缩略图？&lt;/li&gt;
&lt;li&gt;一个 App 会处于哪些状态？&lt;/li&gt;
&lt;li&gt;Push Notification 是如何工作的？&lt;/li&gt;
&lt;li&gt;什么是 Runloop？&lt;/li&gt;
&lt;li&gt;Toll-Free Bridging 是什么？什么情况下会使用？&lt;/li&gt;
&lt;li&gt;当系统出现内存警告时会发生什么？&lt;/li&gt;
&lt;li&gt;什么是 Protocol，Delegate 一般是怎么用的？&lt;/li&gt;
&lt;li&gt;autorelease 对象在什么情况下会被释放？&lt;/li&gt;
&lt;li&gt;UIWebView 有哪些性能问题？有没有可替代的方案。&lt;/li&gt;
&lt;li&gt;为什么 NotificationCenter 要 removeObserver? 如何实现自动 remove?&lt;/li&gt;
&lt;li&gt;当 TableView 的 Cell 改变时，如何让这些改变以动画的形式呈现？&lt;/li&gt;
&lt;li&gt;@property中有哪些属性关键字？&lt;/li&gt;
&lt;li&gt;weak属性需要在dealloc中置nil么？&lt;/li&gt;
&lt;li&gt;objc使用什么机制管理对象内存？&lt;/li&gt;
&lt;li&gt;使用block时什么情况会发生引用循环，如何解决？&lt;/li&gt;
&lt;li&gt;在block内如何修改block外部变量？&lt;/li&gt;
&lt;li&gt;GCD的队列（dispatch_queue_t）分哪两种类型？&lt;/li&gt;
&lt;li&gt;addObserver:forKeyPath:options:context:各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？&lt;/li&gt;
&lt;li&gt;如何手动触发一个value的KVO&lt;/li&gt;
&lt;li&gt;若一个类有实例变量NSString *_foo，调用setValue:forKey:时，可以以foo还是_foo作为key？&lt;/li&gt;
&lt;li&gt;IBOutlet连出来的视图属性为什么可以被设置成weak?&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;#####中级部分&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;为什么 UIScrollView 的滚动会导致 NSTimer 失效？&lt;/li&gt;
&lt;li&gt;为什么当 Core Animation 完成时，layer 又会恢复到原先的状态？&lt;/li&gt;
&lt;li&gt;你会如何存储用户的一些敏感信息，如登录的 token。&lt;/li&gt;
&lt;li&gt;有用过一些开源组件吧，能简单说几个么，大概说说它们的使用场景实现。&lt;/li&gt;
&lt;li&gt;什么时候会发生 EXC BAD ACCESS 异常？&lt;/li&gt;
&lt;li&gt;什么时候会使用 Core Graphics，有什么注意事项么？&lt;/li&gt;
&lt;li&gt;NSNotification 和 KVO 的使用场景？&lt;/li&gt;
&lt;li&gt;使用 Block 时需要注意哪些问题？&lt;/li&gt;
&lt;li&gt;performSelector:withObject:afterDelay: 内部大概是怎么实现的，有什么注意事项么？&lt;/li&gt;
&lt;li&gt;如何播放 GIF 图片，有什么优化方案么？&lt;/li&gt;
&lt;li&gt;使用 NSUserDefaults 时，如何处理布尔的默认值？(比如返回 NO，不知道是真的 NO 还是没有设置过)&lt;/li&gt;
&lt;li&gt;有哪几种方式可以对图片进行缩放，使用 CoreGraphics 缩放时有什么注意事项？&lt;/li&gt;
&lt;li&gt;哪些途径可以让 ViewController 瘦下来？&lt;/li&gt;
&lt;li&gt;有哪些常见的 Crash 场景？&lt;/li&gt;
&lt;li&gt;设计一个可以无限滚动并且支持自动滚动的 SlideShow。&lt;/li&gt;
&lt;li&gt;设计一个进度条。&lt;/li&gt;
&lt;li&gt;设计一套大文件（如上百M的视频）下载方案。&lt;/li&gt;
&lt;li&gt;如果让你来实现 dispatch_once，你会怎么做？&lt;/li&gt;
&lt;li&gt;设计一个类似 iOS 主屏可以下拉出现 Spotlight 的系统。(对 UIScrollView 的理解程度)&lt;/li&gt;
&lt;li&gt;@synthesize和@dynamic分别有什么作用&lt;/li&gt;
&lt;li&gt;ARC下，不显式指定任何属性关键字时，默认的关键字都有哪些？&lt;/li&gt;
&lt;li&gt;@synthesize合成实例变量的规则是什么？假如property名为foo，存在一个名为_foo的实例变量，那么还会自动合成新变量么？&lt;/li&gt;
&lt;li&gt;objc中向一个nil对象发送消息将会发生什么？&lt;/li&gt;
&lt;li&gt;objc中向一个对象发送消息[obj foo]和objc_msgSend()函数之间有什么关系？&lt;/li&gt;
&lt;li&gt;什么时候会报unrecognized selector的异常？&lt;/li&gt;
&lt;li&gt;runloop和线程有什么关系？&lt;/li&gt;
&lt;li&gt;runloop的mode作用是什么？&lt;/li&gt;
&lt;li&gt;ARC通过什么方式帮助开发者管理内存&lt;/li&gt;
&lt;li&gt;不手动指定autoreleasepool的前提下，一个autorealese对象在什么时刻释放？（比如在一个vc的viewDidLoad中创建）&lt;/li&gt;
&lt;li&gt;BAD_ACCESS在什么情况下出现？&lt;/li&gt;
&lt;li&gt;使用系统的某些block api（如UIView的block版本写动画时），是否也考虑引用循环问题？&lt;/li&gt;
&lt;li&gt;如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）&lt;/li&gt;
&lt;li&gt;如何调试BAD_ACCESS错误&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;#####高级部分&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;你使用过Objective-C的运行时编程（Runtime Programming）么？如果使用过，你用它做了什么？你还能记得你所使用的相关的头文件或者某些方法的名称吗？&lt;/li&gt;
&lt;li&gt;Core开头的系列的内容。是否使用过CoreAnimation和CoreGraphics。UI框架和CA，CG框架的联系是什么？分别用CA和CG做过些什么动画或者图像上的内容。（有需要的话还可以涉及Quartz的一些内容）&lt;/li&gt;
&lt;li&gt;是否使用过CoreText或者CoreImage等？如果使用过，请谈谈你使用CoreText或者CoreImage的体验。&lt;/li&gt;
&lt;li&gt;NSNotification和KVO的区别和用法是什么？什么时候应该使用通知，什么时候应该使用KVO，它们的实现上有什么区别吗？如果用protocol和delegate（或者delegate的Array）来实现类似的功能可能吗？如果可能，会有什么潜在的问题？如果不能，为什么？（虽然protocol和delegate这种东西面试已经面烂了…）&lt;/li&gt;
&lt;li&gt;你用过NSOperationQueue么？如果用过或者了解的话，你为什么要使用NSOperationQueue，实现了什么？请描述它和GCD的区别和类似的地方（提示：可以从两者的实现机制和适用范围来描述）。&lt;/li&gt;
&lt;li&gt;既然提到GCD，那么问一下在使用GCD以及block时要注意些什么？它们两是一回事儿么？block在ARC中和传统的MRC中的行为和用法有没有什么区别，需要注意些什么？&lt;/li&gt;
&lt;li&gt;您是否做过异步的网络处理和通讯方面的工作？如果有，能具体介绍一些实现策略么？&lt;/li&gt;
&lt;li&gt;对于Objective-C，你认为它最大的优点和最大的不足是什么？对于不足之处，现在有没有可用的方法绕过这些不足来实现需求。如果可以的话，你有没有考虑或者实践过重新实现OC的一些功能，如果有，具体会如何做？&lt;/li&gt;
&lt;li&gt;你实现过一个框架或者库以供别人使用么？如果有，请谈一谈构建框架或者库时候的经验；如果没有，请设想和设计框架的public的API，并指出大概需要如何做、需要注意一些什么方面，来使别人容易地使用你的框架。&lt;/li&gt;
&lt;li&gt;用@property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？&lt;/li&gt;
&lt;li&gt;在有了自动合成属性实例变量之后，@synthesize还有哪些使用场景？&lt;/li&gt;
&lt;li&gt;一个objc对象如何进行内存布局？（考虑有父类的情况&lt;/li&gt;
&lt;li&gt;一个objc对象的isa的指针指向什么？有什么作用？&lt;/li&gt;
&lt;li&gt;runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）&lt;/li&gt;
&lt;li&gt;使用runtime Associate方法关联的对象，需要在主对象dealloc的时候释放么？&lt;/li&gt;
&lt;li&gt;objc中的类方法和实例方法有什么本质区别和联系？&lt;/li&gt;
&lt;li&gt;_objc_msgForward函数是做什么的，直接调用它将会发生什么？&lt;/li&gt;
&lt;li&gt;runtime如何实现weak变量的自动置nil？&lt;/li&gt;
&lt;li&gt;能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么&lt;/li&gt;
&lt;li&gt;以+ scheduledTimerWithTimeInterval…的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？&lt;/li&gt;
&lt;li&gt;猜想runloop内部是如何实现的？&lt;/li&gt;
&lt;li&gt;苹果是如何实现autoreleasepool的？&lt;/li&gt;
&lt;li&gt;dispatch_barrier_async的作用是什么&lt;/li&gt;
&lt;li&gt;苹果为什么要废弃dispatch_get_current_queue？&lt;/li&gt;
&lt;li&gt;KVC的keyPath中的集合运算符如何使用？&lt;/li&gt;
&lt;li&gt;KVC和KVO的keyPath一定是属性么？&lt;/li&gt;
&lt;li&gt;如何关闭默认的KVO的默认实现，并进入自定义的KVO实现&lt;/li&gt;
&lt;li&gt;apple用什么方式实现对一个对象的KVO？&lt;/li&gt;
&lt;li&gt;IB中User Defined Runtime Attributes如何使用？&lt;/li&gt;
&lt;li&gt;lldb（gdb）常用的调试命令？&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;#####初级部分&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;最近这两天你有学到什么知识/技能么？&lt;/li&gt;
&lt;li&gt;最近有做过比较酷或者比较有挑战的项目么？&lt;/li&gt;
&lt;li&gt;最近看过的书/文章有哪些？&lt;/li&gt;
&lt;li&gt;如何向一个只接触过互
    
    </summary>
    
    
      <category term="ios" scheme="http://cooooper.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>ideabinder iOS 工程师 岗位要求</title>
    <link href="http://cooooper.github.io/2016/05/18/ideabinder-iOS-%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B2%97%E4%BD%8D%E8%A6%81%E6%B1%82/"/>
    <id>http://cooooper.github.io/2016/05/18/ideabinder-iOS-工程师岗位要求/</id>
    <published>2016-05-18T06:55:40.000Z</published>
    <updated>2016-05-18T08:36:01.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;岗位职责：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;[独立开发] 能够独立完成客户端应用的功能开发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[功能调试] 负责客户端的单元测试及功能调试&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[持续优化] 能够对现有项目进行维护及持续优化，并能及时添加对iOS新特性的支持&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[编写文档] 参与工程类相关文档的编写与维护工作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[反馈问题] 主动发现问题，及时向主管反馈&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;岗位要求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为人正直、诚实守信、认真负责&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一年以上iOS客户端开发经验，深入理解面向对象编程思想，具有扎实的Objective-C的语言基础，良好的编码风格，掌握SQLite数据库的基本操作及HTTP/HTTPS网络协议相关知识&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对内存管理机制有较深了解，了解多线程编程，对MVC框架及常见设计模式有自己的见解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;具有团队合作精神，优秀的分析、解决问题能力，快速学习能力，能从具体业务出发对新技术进行研究和运用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;追求更好的用户体验，并能提出自己的见解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;计算机及软件相关专业本科学历及以上者优先考虑&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实习岗：[技术定向生 —— iOS开发方向]     &lt;/p&gt;
&lt;p&gt;岗位职责：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[学习技术] 学习并研究技术主管所安排的技术点     &lt;/li&gt;
&lt;li&gt;[功能开发] 根据主管的任务安排，完成小型独立模块或控件的开发工作      &lt;/li&gt;
&lt;li&gt;[单元测试] 负责iOS客户端的单元测试，参与系统的集成测试    &lt;/li&gt;
&lt;li&gt;[文档编写] 参与工程类相关文档的编写与维护工作      &lt;/li&gt;
&lt;li&gt;[反馈问题] 主动发现问题，及时向主管反馈&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;岗位要求：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为人正直，诚实守信、认真负责&lt;/li&gt;
&lt;li&gt;理解面向对象编程思想，熟悉iOS系统并具有Objective-C的语言基础，了解数据库的基本操作&lt;/li&gt;
&lt;li&gt;具有团队合作精神，良好的沟通能力，勇于承担责任&lt;/li&gt;
&lt;li&gt;具有强烈的求知欲，对技术狂热，有快速学习能力 &lt;/li&gt;
&lt;li&gt;计算机相关专业本科及以上者，具有移动互联项目开发经验者优先&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;岗位职责：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;[独立开发] 能够独立完成客户端应用的功能开发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[功能调试] 负责客户端的单元测试及功能调试&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[持续优化] 能够对现有项目进行
    
    </summary>
    
    
  </entry>
  
</feed>
